class clsCustomer
{
	public:
		__fastcall clsCustomer();
		__fastcall ~clsCustomer();

		// variables
		std::wstring	ABN;
		std::wstring	AccountNumber;
		bool			Active;
		bool 			IsIndividual;
		std::wstring 	CoName;
		int 			dbID;
		bool			External;
		std::wstring	FName;
		std::wstring	LName;
		int 			MyobCardID;
		std::wstring	Notes;
		Currency		BillingRate;
		bool			VolumePricing;
		bool			PricingInterest;


		std::vector<clsContainer*> 	Containers;
		std::vector<clsLocation*> 	Locations;
		std::vector<std::wstring> 	ExtAccounts;

		// properties
		TDateTime	__property	DateCreated 	= {read=_dateCreated};
		TDateTime	__property	FixedPriceDate	= {read=_fixedPriceDate, write=_fixedPriceDate};
		TDateTime	__property 	RateLastUpdated	= {read=_rateUpdateDate};
		bool		__property 	NeedsMyobUpdate	= {read=_needsMyobUpdate, write=_needsMyobUpdate};

		// functions
		clsLocation*	__fastcall	AddLocation(int dbid);
		clsLocation*	__fastcall	AddLocation();
		void 			__fastcall	AddLocation(clsLocation* loc);
		void			__fastcall	CheckIfExternal();
		std::wstring	__fastcall	DisplayName();
		clsLocation*	__fastcall	FindLocationByDbID( int dbid );
		clsLocation* 	__fastcall 	PrimaryAddress();
		void			__fastcall	SetFixedPriceDate(std::wstring UKDateString);
		void			__fastcall	SetMyobIdentifiers(std::wstring identifiers);
		void			__fastcall	SetRateUpdateDate( TDateTime UpdateDate);

	private:
		// functions
		std::vector<std::wstring>	__fastcall 	ParseText(const std::wstring txt);
		// variables
		TDateTime		_dateCreated;
		TDateTime		_fixedPriceDate;
		TDateTime		_rateUpdateDate;
		bool			_needsMyobUpdate;
};
//---------------------------------------------------------------------------
